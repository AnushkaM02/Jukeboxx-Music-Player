/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package music.playlist;

import java.sql.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import net.proteanit.sql.DbUtils;

import javax.swing.*;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author anushka
 */
public class Explore extends javax.swing.JFrame {
    String user;
    
    /**
     * Creates new form sample
     */
    
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    DefaultTableModel model = null;
    
    
    public Explore(String username) {
        user = username;
        
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;//This causes all cells to be not editable
            }
        };

        model.addColumn("#");
        model.addColumn("Title");
        model.addColumn("Artists");

        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/music?user=root&password=Red@1989");
            
            String sql = "select title, songs.song_id,\n" +
                         "group_concat(artist_name) as \"Artists\"\n" +
                         "from artist,songs\n" +
                         "where songs.song_id = artist.song_id\n" +
                         "Group by title, song_id;";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("song_id"), rs.getString("title"), rs.getString("Artists")});
            }
            rs.close();
        }

        catch(Exception e){
            System.out.println(e.getMessage());
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        backBtn = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ComboBox = new javax.swing.JComboBox<>();
        playsDisplay = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        exploreTable = new javax.swing.JTable();
        searchBtn = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        gDisplay = new javax.swing.JLabel();
        durationDisplay = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home.png"))); // NOI18N
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 90, 80));

        jLabel1.setFont(new java.awt.Font("Silom", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EXPLORE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 230, 52));

        ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Albums", "Bollywood", "English"}));
        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 440, -1));

        playsDisplay.setBackground(new java.awt.Color(255, 255, 255));
        playsDisplay.setFont(new java.awt.Font("PT Sans", 0, 16)); // NOI18N
        playsDisplay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));
        playsDisplay.setOpaque(true);
        getContentPane().add(playsDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, 170, 20));

        jLabel7.setFont(new java.awt.Font("PT Sans", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Duration");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 260, -1, -1));

        jLabel4.setFont(new java.awt.Font("PT Sans", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Plays");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 320, -1, -1));

        exploreTable.setBackground(new java.awt.Color(238, 238, 238));
        exploreTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        exploreTable.setFont(new java.awt.Font("PT Sans", 0, 12)); // NOI18N
        exploreTable.setModel(model);
        exploreTable.setGridColor(new java.awt.Color(153, 153, 153));
        exploreTable.setSelectionBackground(new java.awt.Color(87, 64, 113));
        exploreTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        exploreTable.setShowVerticalLines(false);
        exploreTable.getTableHeader().setReorderingAllowed(false);
        exploreTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exploreTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exploreTableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(exploreTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 390, 280));

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exploresearch.png"))); // NOI18N
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnMouseClicked(evt);
            }
        });
        getContentPane().add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 50, 60));

        jLabel8.setFont(new java.awt.Font("PT Sans", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Genre");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, -1, -1));

        gDisplay.setBackground(new java.awt.Color(255, 255, 255));
        gDisplay.setFont(new java.awt.Font("PT Sans", 0, 16)); // NOI18N
        gDisplay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));
        gDisplay.setOpaque(true);
        getContentPane().add(gDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 170, 20));

        durationDisplay.setBackground(new java.awt.Color(255, 255, 255));
        durationDisplay.setFont(new java.awt.Font("PT Sans", 0, 16)); // NOI18N
        durationDisplay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));
        durationDisplay.setOpaque(true);
        getContentPane().add(durationDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, 170, 20));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg.jpeg"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 660, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        // TODO add your handling code here:
        Home home = new Home(user);
        home.setVisible(true);
        home.pack();
        this.dispose();
    }//GEN-LAST:event_backBtnMouseClicked

    private void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxActionPerformed

    private void exploreTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exploreTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_exploreTableMouseEntered

    private void exploreTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exploreTableMouseClicked
        // TODO add your handling code here:
        int row = exploreTable.getSelectedRow();
        int column = 0;
        String id = null;
        id = exploreTable.getValueAt(row, column).toString();
        
        try{
            
            String sql2 = "select genre, duration, plays \n" +
            "from songs\n" +
            "where song_id = '"+id+"' ;";  
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/music?user=root&password=Red@1989");
            ps = con.prepareStatement(sql2);
            rs = ps.executeQuery();

            if (rs.next()) { 
                gDisplay.setText(rs.getString("Genre"));
                durationDisplay.setText(rs.getString("Duration"));
                playsDisplay.setText(rs.getString("Plays"));  
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_exploreTableMouseClicked

    private void searchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseClicked
        // TODO add your handling code here:
        try{
            model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;//This causes all cells to be not editable
            }
        };

        model.addColumn("#");
        model.addColumn("Title");
        model.addColumn("Artists");

        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/music?user=root&password=Red@1989");
        String selectedItem = ComboBox.getSelectedItem().toString();
        
        if (selectedItem == "Albums"){
            String sql = "select title, songs.song_id,\n" +
            "group_concat(artist_name) as 'Artists'\n" +
            "from artist,songs\n" +
            "where songs.song_id = artist.song_id AND songs.song_id like 'A%'\n" +
            "Group by title, song_id;";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            exploreTable.setBackground(new java.awt.Color(238, 238, 238));
            exploreTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            exploreTable.setFont(new java.awt.Font("PT Sans", 0, 12)); // NOI18N
            exploreTable.setModel(model);
            exploreTable.setGridColor(new java.awt.Color(153, 153, 153));
            exploreTable.setSelectionBackground(new java.awt.Color(87, 64, 113));
            exploreTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            exploreTable.setShowVerticalLines(false);

            while (rs.next()){
                model.addRow(new Object[]{rs.getString("song_id"), rs.getString("title"), rs.getString("Artists")});
            }
            
            rs.close();
            }

            else if (selectedItem == "-"){
                String sql = "select title, songs.song_id,\n" +
                "group_concat(artist_name) as 'Artists'\n" +
                "from artist,songs\n" +
                "where songs.song_id = artist.song_id\n" +
                "Group by title, song_id;";
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                exploreTable.setBackground(new java.awt.Color(238, 238, 238));
                exploreTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                exploreTable.setFont(new java.awt.Font("PT Sans", 0, 12)); // NOI18N
                exploreTable.setModel(model);
                exploreTable.setGridColor(new java.awt.Color(153, 153, 153));
                exploreTable.setSelectionBackground(new java.awt.Color(87, 64, 113));
                exploreTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                exploreTable.setShowVerticalLines(false);
            
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("song_id"), rs.getString("title"), rs.getString("Artists")});               
            }
            
            rs.close();
            }

            else if (selectedItem == "Bollywood"){
                String sql = "select title, songs.song_id,\n" +
                "group_concat(artist_name) as 'Artists'\n" +
                "from artist,songs\n" +
                "where songs.song_id = artist.song_id AND songs.song_id like 'B%'\n" +
                "Group by title, song_id;";
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

            exploreTable.setBackground(new java.awt.Color(238, 238, 238));
            exploreTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            exploreTable.setFont(new java.awt.Font("PT Sans", 0, 12)); // NOI18N
            exploreTable.setModel(model);
            exploreTable.setGridColor(new java.awt.Color(153, 153, 153));
            exploreTable.setSelectionBackground(new java.awt.Color(87, 64, 113));
            exploreTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            exploreTable.setShowVerticalLines(false);
            
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("song_id"), rs.getString("title"), rs.getString("Artists")});                
            }
            
            rs.close();
            }

            else if (selectedItem == "English")
            {
                String sql = "select title, songs.song_id,\n" +
                "group_concat(artist_name) as 'Artists'\n" +
                "from artist,songs\n" +
                "where songs.song_id = artist.song_id AND songs.song_id like 'E%'\n" +
                "Group by title, song_id;";
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                exploreTable.setBackground(new java.awt.Color(238, 238, 238));
                exploreTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                exploreTable.setFont(new java.awt.Font("PT Sans", 0, 12)); // NOI18N
                exploreTable.setModel(model);
                exploreTable.setGridColor(new java.awt.Color(153, 153, 153));
                exploreTable.setSelectionBackground(new java.awt.Color(87, 64, 113));
                exploreTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                exploreTable.setShowVerticalLines(false);

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("song_id"), rs.getString("title"), rs.getString("Artists")});              
            }

            rs.close();
            }
            
        }
                   
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    
    }//GEN-LAST:event_searchBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Explore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Explore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Explore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Explore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Explore exp = new Explore("");
                exp.setVisible(true);
                exp.pack();
//              exp.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JLabel backBtn;
    private javax.swing.JLabel durationDisplay;
    private javax.swing.JTable exploreTable;
    private javax.swing.JLabel gDisplay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel playsDisplay;
    private javax.swing.JLabel searchBtn;
    // End of variables declaration//GEN-END:variables
}
